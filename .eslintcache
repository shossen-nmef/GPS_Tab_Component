[{"I:\\NMEF\\FAST\\GPS\\gps\\src\\index.js":"1","I:\\NMEF\\FAST\\GPS\\gps\\src\\App.js":"2","I:\\NMEF\\FAST\\GPS\\gps\\src\\reportWebVitals.js":"3","I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\gps-tab\\gps-tab.js":"4","I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\asset_info_table\\AssetInfoTable.js":"5","I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\gps_info_table\\gpsInfo_table.js":"6","I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\nmef-phone-text\\nmef-phone-text.js":"7","I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\GmapAutoComplete\\GoogleMap.js":"8"},{"size":500,"mtime":1606808015816,"results":"9","hashOfConfig":"10"},{"size":149,"mtime":1606830036413,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2568,"mtime":1606844157988,"results":"13","hashOfConfig":"10"},{"size":824,"mtime":1606814565655,"results":"14","hashOfConfig":"10"},{"size":21391,"mtime":1606921248935,"results":"15","hashOfConfig":"10"},{"size":1653,"mtime":1606917362067,"results":"16","hashOfConfig":"10"},{"size":3542,"mtime":1606917588323,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16r2e2j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"I:\\NMEF\\FAST\\GPS\\gps\\src\\index.js",[],["37","38"],"I:\\NMEF\\FAST\\GPS\\gps\\src\\App.js",[],"I:\\NMEF\\FAST\\GPS\\gps\\src\\reportWebVitals.js",[],"I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\gps-tab\\gps-tab.js",[],"I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\asset_info_table\\AssetInfoTable.js",[],"I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\gps_info_table\\gpsInfo_table.js",["39"],"import React, { useState } from 'react';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    makeStyles,\r\n    TextField,\r\n    Button,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControl,\r\n    FormGroup,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    FormLabel\r\n} from '@material-ui/core';\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { Print } from '@material-ui/icons';\r\nimport './gpsInfo_table.scss'\r\nimport NMEFTextPhoneField from '../nmef-phone-text/nmef-phone-text';\r\nimport GoogleMap from '../GmapAutoComplete/GoogleMap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'right',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    radioButton: {\r\n        position: 'relative', \r\n        left: -105,\r\n        top: 0, \r\n    },\r\n    borderBottom: {\r\n        borderBottom: '1.8px solid #BDC3C7'\r\n    },\r\n    leftText: {\r\n        textAlign: 'right',\r\n        color: '#17202A'\r\n    }\r\n}));\r\n\r\nconst GpsInfoTable = () => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n\r\n        StandAlone: false,\r\n        Rush: false,\r\n        ClientToInstall: false,\r\n        VendorToInstall: false,\r\n        PrivateParty: false,\r\n        AdditionalNotes: false,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const [locationstate, setMapState] = useState({\r\n        location: ''\r\n    });\r\n\r\n    const updateMapInfo = (data) => {\r\n        setMapState({\r\n            location: data.location\r\n        });\r\n    }\r\n\r\n    const [GpsOrder, setGpsOrder] = useState(false);\r\n    const [AspenOrdered, setAspenOrder] = useState(false);\r\n    const [GPSScheduled, setGpsScheduled] = useState(false);\r\n    const [GPSInstalled, setGPSInstalled] = useState(false);\r\n    const [primaryNumber, setPrimaryNumber] = useState({\r\n        cleave: \"\"\r\n    });\r\n    const [secondaryNumber, setSecondaryNumber] = useState({\r\n        cleave: \"\"\r\n    });\r\n\r\n    const customePrimaryNumber = name => event => {\r\n        setPrimaryNumber({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const customeSecondaryNumber = name => event => {\r\n        setSecondaryNumber({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <form>\r\n                <Paper className='gps-table'>\r\n                    <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\" className={classes.borderBottom}>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">GPS Serial #</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3} style={{ borderRight: '1.8px solid #BDC3C7' }}>\r\n                            <TextField className={classes.paper} fullWidth placeholder=\"Enter Gps Id\" size=\"small\" variant=\"outlined\" />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">GPS Order</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <FormControl component=\"fieldset\" className={GpsOrder ? '' : classes.radioButton}>\r\n                                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"No\">\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"No\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        onChange={() => setGpsOrder(false)}\r\n                                        label=\"No\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"Yes\"\r\n                                        onChange={() => setGpsOrder(true)}\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label=\"Yes\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n                                    {GpsOrder? <TextField type=\"date\" style={{ paddingLeft: '20px' }} size=\"small\" variant=\"outlined\" /> : null}\r\n                                </RadioGroup>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Business Name */}\r\n                    <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\" style={{ borderBottom: '1.8px solid #BDC3C7' }}>\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">Business Name</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3} style={{ borderRight: '1.8px solid #BDC3C7' }}>\r\n                            <TextField className={classes.paper} fullWidth placeholder=\"Business Name\" size=\"small\" variant=\"outlined\" />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">Aspen Ordered</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <FormControl component=\"fieldset\" className={AspenOrdered?'': classes.radioButton}>\r\n                                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"No\">\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"No\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        onChange={()=>setAspenOrder(false)}\r\n                                        label=\"No\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"Yes\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        onChange={() => setAspenOrder(true)}\r\n                                        label=\"Yes\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n                                    {AspenOrdered?<TextField type=\"date\" style={{ paddingLeft: '20px' }} size=\"small\" variant=\"outlined\" /> : null}\r\n                                </RadioGroup>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* Business Name */}\r\n\r\n                    {/* Contact person  */}\r\n                    <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\" style={{ borderBottom: '1.8px solid #BDC3C7' }}>\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">* Contact Person</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3} style={{ borderRight: '1.8px solid #BDC3C7' }}>\r\n                            <TextField className={classes.paper} fullWidth placeholder=\"Enter Contact Person\" color=\"secondary\" size=\"small\" variant=\"outlined\" />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">GPS Scheduled</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <FormControl component=\"fieldset\" className={GPSScheduled? '': classes.radioButton}>\r\n                                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"No\">\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"No\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        onChange={()=> setGpsScheduled(false)}\r\n                                        label=\"No\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"Yes\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        onChange={()=> setGpsScheduled(true)}\r\n                                        label=\"Yes\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                    {GPSScheduled? <TextField type=\"datetime-local\" style={{ paddingLeft: '20px', width: '212px' }} size=\"small\" variant=\"outlined\" /> : null}\r\n\r\n                                </RadioGroup>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/** Contact Person */}\r\n\r\n                    {/*Phone Number Primary*/}\r\n                    <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\" style={{ borderBottom: '1.8px solid #BDC3C7' }}>\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">* Phone Number Primary</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3} style={{ borderRight: '1.8px solid #BDC3C7' }}>\r\n                            \r\n                            < NMEFTextPhoneField\r\n                                placeholder=\"Enter Primary Number\"\r\n                                value={primaryNumber}\r\n                                onChange={customePrimaryNumber}\r\n                            />\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">GPS Installed</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <FormControl component=\"fieldset\" className={GPSInstalled? '': classes.radioButton}>\r\n                                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"No\">\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"No\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        onChange={() => setGPSInstalled(false)}\r\n                                        label=\"No\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"Yes\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        onChange={() => setGPSInstalled(true)}\r\n                                        label=\"Yes\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n                                    {GPSInstalled? <TextField type=\"date\" style={{ paddingLeft: '20px' }} size=\"small\" variant=\"outlined\" /> : null}\r\n                                </RadioGroup>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/*Phone Number Primary*/}\r\n\r\n                    {/*Phone Number Secondary*/}\r\n                    <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\" style={{ borderBottom: '1.8px solid #BDC3C7' }}>\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">* Phone Number Secondary</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3} style={{ borderRight: '1.8px solid #BDC3C7' }}>\r\n                            < NMEFTextPhoneField\r\n                                placeholder=\"Enter Secondary Number\"\r\n                                value={secondaryNumber}\r\n                                onChange={customeSecondaryNumber}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">GPS Located</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <FormControl component=\"fieldset\" className={classes.radioButton}>\r\n                                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"No\">\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"No\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label=\"No\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"Yes\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label=\"Yes\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                </RadioGroup>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/*Phone Number Secondary*/}\r\n\r\n                    {/*Email*/}\r\n                    <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\" style={{ borderBottom: '1.8px solid #BDC3C7' }}>\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">Email</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3} style={{ borderRight: '1.8px solid #BDC3C7' }}>\r\n                            <TextField className={classes.paper} fullWidth placeholder=\"Enter Email\" size=\"small\" variant=\"outlined\" />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormLabel className={classes.leftText} component=\"legend\">GPS Auto-Report Successful</FormLabel>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <FormControl component=\"fieldset\" className={classes.radioButton}>\r\n                                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"No\">\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"No\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label=\"No\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                        value=\"Yes\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label=\"Yes\"\r\n                                        labelPlacement=\"start\"\r\n                                    />\r\n                                </RadioGroup>\r\n\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/*Email*/}\r\n\r\n                    {/*GPS Tracking*/}\r\n                    <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\" style={{ borderBottom: '1.8px solid #BDC3C7' }}>\r\n\r\n                        <Grid container direction='column' item xs={4}>\r\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                                <Grid item xs={3}>\r\n                                    <FormLabel className={classes.leftText} component=\"legend\">GPS Tracking</FormLabel>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={9}>\r\n                                    <TextField className={classes.paper} fullWidth placeholder=\"Enter GPS Tracking data\" size=\"small\" variant=\"outlined\" />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={3}>\r\n                                    <FormLabel className={classes.leftText} component=\"legend\">* Address</FormLabel>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={9}>\r\n                                    <GoogleMap className={classes.paper} placeholder=\"Enter Address\"  updateMapInfo={updateMapInfo} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container direction='column' item xs={6} style={{ borderLeft: '1.8px solid #BDC3C7' }}>\r\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                <Grid item xs={3}>\r\n                                    <FormLabel className={classes.leftText} component=\"legend\">Special Requests</FormLabel>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={7}>\r\n                                    <FormControl required component=\"fieldset\" className={classes.formControl}>\r\n                                        <FormGroup>\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox size=\"small\" checked={state.StandAlone} onChange={handleChange} name=\"StandAlone\" />}\r\n                                                label=\"Stand Alone\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox size=\"small\" checked={state.Rush} onChange={handleChange} name=\"Rush\" />}\r\n                                                label=\"Jason Killian\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox size=\"small\" checked={state.ClientToInstall} onChange={handleChange} name=\"ClientToInstall\" />}\r\n                                                label=\"Rush\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox size=\"small\" checked={state.VendorToInstall} onChange={handleChange} name=\"VendorToInstall\" />}\r\n                                                label=\"Vendor To Install\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox size=\"small\" checked={state.PrivateParty} onChange={handleChange} name=\"PrivateParty\" />}\r\n                                                label=\"Private Party\"\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    {/*GPS Tracking*/}\r\n\r\n                </Paper>\r\n\r\n                {/*Additional Notes*/}\r\n                <Grid container direction=\"row\" spacing={1} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={2}>\r\n                        <FormLabel className={classes.leftText} component=\"legend\">Additional Notes</FormLabel>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} style={{ borderRight: '1.8px solid #BDC3C7' }}>\r\n                        <TextField className={classes.paper} fullWidth placeholder=\"Additional Notes\" size=\"medium\" variant=\"outlined\" />\r\n                    </Grid>\r\n                </Grid>\r\n                {/*Additional Notes*/}\r\n                <Button\r\n                    style={{ float: 'right', marginRight: '10px', background: 'green' }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}>\r\n                    Save\r\n                </Button>\r\n\r\n                <Button\r\n                    style={{float:'right',marginRight:'10px'}}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    className={classes.button}\r\n                    startIcon={<Print />}>\r\n                    Print\r\n                </Button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GpsInfoTable;","I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\nmef-phone-text\\nmef-phone-text.js",[],"I:\\NMEF\\FAST\\GPS\\gps\\src\\component\\GmapAutoComplete\\GoogleMap.js",["40"],"import React, { useState, useEffect } from 'react';\r\nimport { GoogleApiWrapper } from 'google-maps-react';\r\nimport { TextField } from '@material-ui/core'\r\n\r\n// import './map.css'\r\n\r\nconst MapContainer = (props) => {\r\n\r\n    const [MapState, setMapState] = useState({\r\n        location: '',\r\n        streetNumber: '',\r\n        street: '',\r\n        city: '',\r\n        stateCode: '',\r\n        zipCode: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        props.updateMapInfo(MapState); // pass data to the parent component\r\n    }, [MapState]);\r\n\r\n\r\n    const handleChange = (e) => {\r\n\r\n\r\n        e.preventDefault();\r\n        setMapState({ ...MapState, location: MapState.location });\r\n\r\n        var Gmap_Address = \"\";\r\n\r\n        function initAutocomplete() {\r\n            var input = document.getElementById('map-input');\r\n\r\n            var autoComplete = new window.google.maps.places.Autocomplete(input,\r\n                { types: [\"geocode\"], }\r\n            );\r\n\r\n            autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n            autoComplete.addListener(\"place_changed\", () => {\r\n\r\n                var place = autoComplete.getPlace();\r\n\r\n                for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n                    var addressType = place.address_components[i].types[0];\r\n                    switch (addressType) {\r\n                        case \"street_number\":\r\n                            var streetNumber = place.address_components[i][\"short_name\"];\r\n                            Gmap_Address += streetNumber + \" \";\r\n                            break;\r\n                        case \"route\":\r\n                            var street = place.address_components[i][\"long_name\"];\r\n                            Gmap_Address += street + \", \";\r\n                            break;\r\n                        case \"locality\":\r\n                            var city = place.address_components[i][\"long_name\"];\r\n                            Gmap_Address += city + \", \";\r\n                            break;\r\n                        case \"administrative_area_level_1\":\r\n                            var stateCode = place.address_components[i][\"short_name\"];\r\n                            Gmap_Address += stateCode + \" \";\r\n                            break;\r\n                        case \"postal_code\":\r\n                            var zipCode = place.address_components[i][\"short_name\"];\r\n                            Gmap_Address += zipCode;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                setMapState({\r\n                    location: Gmap_Address,\r\n                    streetNumber: streetNumber,\r\n                    street: street,\r\n                    city: city,\r\n                    stateCode: stateCode,\r\n                    zipCode: zipCode\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        initAutocomplete();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-field\">\r\n            \r\n            <TextField\r\n                size=\"small\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onFocus={handleChange}\r\n                id=\"map-input\"\r\n                className={props.className}\r\n                type=\"text\"\r\n                placeholder={props.placeholder}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyBLVHqBpK4pTUHkxRLctTj6a3nHrt1d-uI')\r\n})(MapContainer);",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":64,"column":12,"nodeType":"47","messageId":"48","endLine":64,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":20,"column":8,"nodeType":"51","endLine":20,"endColumn":18,"suggestions":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'locationstate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [MapState, props]",{"range":"58","text":"59"},[520,530],"[MapState, props]"]